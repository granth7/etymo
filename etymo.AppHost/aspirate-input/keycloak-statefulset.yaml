apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  labels:
    app: keycloak
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  serviceName: keycloak
  template:
    metadata:
      annotations: {}
      labels:
        app: keycloak
    spec:
      containers:
      - args:
        - start
        - --import-realm
        - --https-certificate-file=/etc/tls/tls.crt
        - --https-certificate-key-file=/etc/tls/tls.key
        - --hostname=https://{{ tpl (index .Values.expose.keycloak.ingress.hosts 0) . }}
        - --hostname-backchannel-dynamic=true
        envFrom:
        - configMapRef:
            name: keycloak
        image: '{{ .Values.images.keycloak }}'
        imagePullPolicy: IfNotPresent
        name: keycloak
        ports:
        - containerPort: 8443
          name: https
        volumeMounts:
        - mountPath: /opt/keycloak/data
          name: etymo-apphost-6a09035998-keycloak-data
        - mountPath: /opt/keycloak/data/import/etymo-realm.json 
          subPath: etymo-realm.json
          name: etymo-apphost-6a09035998-keycloak-data-import
        - mountPath: "/etc/tls"
          name: tls-secret
          readOnly: true
      volumes:
      - name: etymo-apphost-6a09035998-keycloak-data-import
        configMap:
          name: keycloak
      - name: tls-secret
        secret:
          secretName: tls.keycloak
      terminationGracePeriodSeconds: 180
  volumeClaimTemplates:
  - metadata:
      name: etymo-apphost-6a09035998-keycloak-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: openebs-hostpath