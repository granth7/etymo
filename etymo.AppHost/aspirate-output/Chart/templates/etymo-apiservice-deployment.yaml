apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: etymo-apiservice
  name: etymo-apiservice
spec:
  minReadySeconds: 60
  replicas: 1
  selector:
    matchLabels:
      app: etymo-apiservice
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: etymo-apiservice
    spec:
      containers:
      - args: []
        envFrom:
        - configMapRef:
            name: etymo-apiservice
        image: '{{ .Values.images.etymoapiservice }}'
        env:
          - name: existingPostgres
            valueFrom:
              secretKeyRef:
                name: {{ (split "/" .Values.secrets.connectionStrings.existingPostgres)._0 }} 
                key: {{ (split "/" .Values.secrets.connectionStrings.existingPostgres)._1 }}
        imagePullPolicy: IfNotPresent
        name: etymo-apiservice
        volumeMounts:
          - name: apiservice-tls-volume
            mountPath: /etc/tls
            readOnly: true
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
      volumes:
        - name: apiservice-tls-volume
          secret:
            secretName: {{ .Values.apiservice.tls.secretName }}
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      terminationGracePeriodSeconds: 180