@inherits LayoutComponentBase
@inject UserStateService UserState
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using etymo.Web.Components.Services

<Heartbeat />

<div class="page">
    <main class="py-8">
        <div class="navbar bg-base-100 fixed top-0 z-50 w-full">
            <div class="navbar-start px-3">
                <a href="/" class="icon btn" />
            </div>
            <div class="navbar-center">
                <h2 class="grid-item text-2xl font-bold col-start-2 col-span-5">Flashcard Trivia (alpha)</h2>
            </div>
            <div class="navbar-end">
                <LoginDisplay />
            </div>
        </div>

        <div class="relative">
            <article class="mt-16">
                @Body
            </article>
        </div>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask != null)
        {
            var authState = await AuthenticationStateTask;
            var user = authState.User;
            if (user?.Identity?.IsAuthenticated == true)
            {
                UserState.IsAuthenticated = true;

                // Extract the user's unique ID
                UserState.UserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value
                    ?? user.FindFirst("sub")?.Value;

                UserState.UserName = user.Identity.Name;
            }
            else
            {
                UserState.UserId = null;
                UserState.UserName = null;
                UserState.IsAuthenticated = false;
            }
        }
    }
}