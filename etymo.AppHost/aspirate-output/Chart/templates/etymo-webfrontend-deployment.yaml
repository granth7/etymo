apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: etymo-webfrontend
  name: etymo-webfrontend
spec:
  minReadySeconds: 60
  replicas: 1
  selector:
    matchLabels:
      app: etymo-webfrontend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        app: etymo-webfrontend
        app.kubernetes.io/name: etymo-shared-key-pods
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - etymo-shared-key-pods
            topologyKey: "kubernetes.io/hostname"
      containers:
      - args: []
        envFrom:
        - configMapRef:
            name: etymo-webfrontend
        image: '{{ .Values.images.etymowebfrontend }}'
        imagePullPolicy: IfNotPresent
        name: etymo-webfrontend
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        volumeMounts:
        - name: dataprotection-keys
          mountPath: /app/dataprotection-keys
        - name: api-cert-volume
          mountPath: /etc/ssl/certs/apiservice.crt
          subPath: tls.crt
          readOnly: true
      volumes:
      - name: dataprotection-keys
        persistentVolumeClaim:
          claimName: dataprotection-keys-pvc
      - name: api-cert-volume
        secret:
          secretName: {{ .Values.apiservice.tls.secretName }}
          items:
          - key: tls.crt
            path: tls.crt
      terminationGracePeriodSeconds: 180